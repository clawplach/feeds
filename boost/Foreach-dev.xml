<?xml version="1.0" ?>
<?xml-stylesheet type='text/xsl' href='interface.xsl'?>
<interface uri="http://ryppl.github.com/feeds/boost/Foreach-dev.xml" xmlns="http://zero-install.sourceforge.net/2004/injector/interface" xmlns:compile="http://zero-install.sourceforge.net/2006/namespaces/0compile" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <name>BoostForeach</name>
  <icon href="http://svn.boost.org/svn/boost/website/public_html/live/gfx/boost-dark-trans.png" type="image/png"/>
  <summary>In C++, writing a loop that iterates over a sequence is tedious. We can either use iterators, which requires a considerable amount of boiler-plate, or we can use the std::for_each() algorithm and move our loop body into a predicate, which requires no less boiler-plate and forces us to move our logic far from where it will be used. In contrast, some other languages, like Perl, provide a dedicated &quot;foreach&quot; construct that automates this process. BOOST_FOREACH is just such a construct for C++. It iterates over sequences for us, freeing us from having to deal directly with iterators or write predicates.</summary>
  <homepage>libs/foreach/</homepage>
  <dc:author>Eric Niebler</dc:author>
  <category type="http://boost.org/lib-categories">Algorithms</category>
  <category type="http://boost.org/lib-categories">Emulation</category>
  <group license="OSI Approved :: Boost Software License 1.0 (BSL-1.0)">
    <implementation arch="*-src" id="32e819e4-9398-4380-a55e-85ea3d7e912e" released="2012-04-24" stability="testing" version="1.49-post-201204240953">
      <archive extract="boost-lib-foreach-d2c53da" href="http://nodeload.github.com/boost-lib/foreach/zipball/d2c53da31b298e8abc653978913850d347f32514" size="36871" type="application/zip"/>
    </implementation>
    <command name="compile">
      <runner interface="http://ryppl.github.com/feeds/ryppl/0runner.xml">
        <arg>http://afb.users.sourceforge.net/zero-install/interfaces/cmake.xml</arg>
        <arg>-E</arg>
        <arg>copy_directory</arg>
        <arg>${SRCDIR}</arg>
        <arg>./source</arg>
        <arg>;</arg>
        <arg>http://afb.users.sourceforge.net/zero-install/interfaces/cmake.xml</arg>
        <arg>-E</arg>
        <arg>copy_directory</arg>
        <arg>${BOOST_CMAKELISTS_DIR}/foreach</arg>
        <arg>./source</arg>
        <arg>;</arg>
        <arg>http://afb.users.sourceforge.net/zero-install/interfaces/cmake.xml</arg>
        <arg>./source</arg>
        <arg>;</arg>
        <arg>http://afb.users.sourceforge.net/zero-install/interfaces/cmake.xml</arg>
        <arg>--build</arg>
        <arg>.</arg>
        <arg>;</arg>
        <arg>http://afb.users.sourceforge.net/zero-install/interfaces/cmake.xml</arg>
        <arg>-DCOMPONENT=dev</arg>
        <arg>-DCMAKE_INSTALL_PREFIX=${DISTDIR}</arg>
        <arg>-P</arg>
        <arg>cmake_install.cmake</arg>
      </runner>
      <requires interface="http://ryppl.github.com/feeds/boost/cmakelists.xml">
        <environment insert="." mode="replace" name="BOOST_CMAKELISTS_DIR"/>
      </requires>
    </command>
  </group>
</interface>
<!-- Base64 Signature
iEYEABECAAYFAk+WeAUACgkQxnV5mk56UjErTwCbBpmEDr1886cuCP1gzcuDGng3ad8An0tCjNNn
cHG3GULIV1zXQp6mX+/Z

-->
