<?xml version="1.0" ?>
<?xml-stylesheet type='text/xsl' href='interface.xsl'?>
<interface uri="http://ryppl.github.com/feeds/boost/utility-src.xml" xmlns="http://zero-install.sourceforge.net/2004/injector/interface" xmlns:compile="http://zero-install.sourceforge.net/2006/namespaces/0compile" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <name>Boost.Utility (source code)</name>
  <icon href="http://svn.boost.org/svn/boost/website/public_html/live/gfx/boost-dark-trans.png" type="image/png"/>
  <summary>A C++ library from Boost.org</summary>
  <homepage>http://www.boost.org/libs/utility/utility.htm</homepage>
  <dc:author>Dave Abrahams</dc:author>
  <dc:author>Fernando Cacciola</dc:author>
  <dc:author/>
  <dc:author>Howard Hinnant</dc:author>
  <dc:author>Jeremy Siek</dc:author>
  <dc:author>Jaakko JÃ¤rvi</dc:author>
  <dc:author>Andrew Lumsdaine</dc:author>
  <dc:author>others</dc:author>
  <dc:author>John Maddock</dc:author>
  <dc:author>Joseph Gauterin</dc:author>
  <dc:author>Jeremiah Willcock</dc:author>
  <dc:author>et al</dc:author>
  <description>utility:
Class noncopyable plus checked_delete(),
    checked_array_delete(), next(), prior() function templates,
    plus base-from-member idiom.

utility/call_traits:
Defines types for passing
    parameters.

utility/compressed_pair:
Empty member optimization.

utility/enable_if:
Selective inclusion of function template
    overloads.

utility/in_place_factories:
Generic in-place construction of contained objects
    with a variadic argument-list.

utility/operators:
Templates ease arithmetic classes and
    iterators.

utility/result_of:
Determines the type of a function call expression.
    

utility/swap:
Enhanced generic swap function.

utility/value_initialized:
Wrapper for uniform-syntax value initialization,
    based on the original idea of David Abrahams.</description>
  <category type="http://boost.org/lib-categories">Generic</category>
  <category type="http://boost.org/lib-categories">Miscellaneous</category>
  <category type="http://boost.org/lib-categories">Function-objects</category>
  <category type="http://boost.org/lib-categories">Iterators</category>
  <category type="http://boost.org/lib-categories">Patterns</category>
  <category type="http://boost.org/lib-categories">Algorithms</category>
  <category type="http://boost.org/lib-categories">Memory</category>
  <category type="http://boost.org/lib-categories">Data</category>
  <category type="http://boost.org/lib-categories">Math</category>
  <group license="OSI Approved :: Boost Software License 1.0 (BSL-1.0)">
    <implementation arch="*-*" id="aff892c3-3c4f-41ae-9ba5-2e15e0a34358" released="2012-05-03" stability="testing" version="1.49-post-201205030420">
      <archive extract="boost-lib-utility-5fc22d6" href="http://nodeload.github.com/boost-lib/utility/zipball/5fc22d66bbd4ad54cf43ac3cf50ffb7ece745b6b" size="223218" type="application/zip"/>
      <manifest-digest sha1new="ce6a288ed19c294d2e8cd35ee40ee8316e8b6827"/>
    </implementation>
  </group>
</interface>
<!-- Base64 Signature
iEYEABECAAYFAk+iB6wACgkQxnV5mk56UjE6rwCffDZ7GDi48LMBlN0XtbSnL7SGY6cAn28UP4pN
yRLkniHoNlZ3F0iOtVtZ

-->
