<?xml version="1.0" ?>
<?xml-stylesheet type='text/xsl' href='interface.xsl'?>
<interface uri="http://ryppl.github.com/feeds/boost/scope_exit-dev.xml" xmlns="http://zero-install.sourceforge.net/2004/injector/interface" xmlns:compile="http://zero-install.sourceforge.net/2006/namespaces/0compile" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <name>Boost.ScopeExit (development files)</name>
  <icon href="http://svn.boost.org/svn/boost/website/public_html/live/gfx/boost-dark-trans.png" type="image/png"/>
  <summary>A C++ library from Boost.org</summary>
  <homepage>http://www.boost.org/libs/scope_exit/</homepage>
  <dc:author>Alexander Nasonov</dc:author>
  <description>Execute arbitrary code at scope exit.</description>
  <category type="http://boost.org/lib-categories">Emulation</category>
  <group license="OSI Approved :: Boost Software License 1.0 (BSL-1.0)">
    <implementation arch="*-src" id="5fcd9f83-c83b-47e2-9e39-fb7ca7a368d5" released="2012-05-01" stability="testing" version="1.49-post-201205020336">
      <archive extract="_empty" href="http://ryppl.github.com/feeds/empty.zip" size="164" type="application/zip"/>
    </implementation>
    <command name="compile">
      <runner interface="http://ryppl.github.com/feeds/ryppl/0cmake.xml">
        <version not-before="0.8-pre-201205011504"/>
        <arg>headers</arg>
      </runner>
      <requires interface="http://ryppl.github.com/feeds/boost/scope_exit-src.xml">
        <environment insert="." mode="replace" name="SRCDIR"/>
      </requires>
      <requires interface="http://ryppl.github.com/feeds/boost/CMakeLists.xml">
        <environment insert="scope_exit" mode="replace" name="BOOST_CMAKELISTS_OVERLAY"/>
      </requires>
      <compile:implementation arch="*-*"/>
    </command>
  </group>
</interface>
<!-- Base64 Signature
iEYEABECAAYFAk+gq9EACgkQxnV5mk56UjEf+ACfWdQkMW146Tx4kwbaBhJvBP8rp9EAnjOEOs71
X9tGX8ZqOQfrvXP4HprW

-->
